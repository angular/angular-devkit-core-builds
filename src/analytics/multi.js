"use strict";
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.MultiAnalytics = void 0;
/**
 * Analytics implementation that reports to multiple analytics backend.
 */
class MultiAnalytics {
    constructor(_backends = []) {
        this._backends = _backends;
    }
    push(...backend) {
        this._backends.push(...backend);
    }
    event(category, action, options) {
        this._backends.forEach((be) => be.event(category, action, options));
    }
    screenview(screenName, appName, options) {
        this._backends.forEach((be) => be.screenview(screenName, appName, options));
    }
    pageview(path, options) {
        this._backends.forEach((be) => be.pageview(path, options));
    }
    timing(category, variable, time, options) {
        this._backends.forEach((be) => be.timing(category, variable, time, options));
    }
    flush() {
        return Promise.all(this._backends.map((x) => x.flush())).then(() => { });
    }
}
exports.MultiAnalytics = MultiAnalytics;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibXVsdGkuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi8uLi8uLi9wYWNrYWdlcy9hbmd1bGFyX2RldmtpdC9jb3JlL3NyYy9hbmFseXRpY3MvbXVsdGkudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBOzs7Ozs7R0FNRzs7O0FBSUg7O0dBRUc7QUFDSCxNQUFhLGNBQWM7SUFDekIsWUFBc0IsWUFBeUIsRUFBRTtRQUEzQixjQUFTLEdBQVQsU0FBUyxDQUFrQjtJQUFHLENBQUM7SUFFckQsSUFBSSxDQUFDLEdBQUcsT0FBb0I7UUFDMUIsSUFBSSxDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQUMsR0FBRyxPQUFPLENBQUMsQ0FBQztJQUNsQyxDQUFDO0lBRUQsS0FBSyxDQUFDLFFBQWdCLEVBQUUsTUFBYyxFQUFFLE9BQXNCO1FBQzVELElBQUksQ0FBQyxTQUFTLENBQUMsT0FBTyxDQUFDLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLENBQUMsS0FBSyxDQUFDLFFBQVEsRUFBRSxNQUFNLEVBQUUsT0FBTyxDQUFDLENBQUMsQ0FBQztJQUN0RSxDQUFDO0lBQ0QsVUFBVSxDQUFDLFVBQWtCLEVBQUUsT0FBZSxFQUFFLE9BQTJCO1FBQ3pFLElBQUksQ0FBQyxTQUFTLENBQUMsT0FBTyxDQUFDLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLENBQUMsVUFBVSxDQUFDLFVBQVUsRUFBRSxPQUFPLEVBQUUsT0FBTyxDQUFDLENBQUMsQ0FBQztJQUM5RSxDQUFDO0lBQ0QsUUFBUSxDQUFDLElBQVksRUFBRSxPQUF5QjtRQUM5QyxJQUFJLENBQUMsU0FBUyxDQUFDLE9BQU8sQ0FBQyxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxDQUFDLFFBQVEsQ0FBQyxJQUFJLEVBQUUsT0FBTyxDQUFDLENBQUMsQ0FBQztJQUM3RCxDQUFDO0lBQ0QsTUFBTSxDQUFDLFFBQWdCLEVBQUUsUUFBZ0IsRUFBRSxJQUFxQixFQUFFLE9BQXVCO1FBQ3ZGLElBQUksQ0FBQyxTQUFTLENBQUMsT0FBTyxDQUFDLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLENBQUMsTUFBTSxDQUFDLFFBQVEsRUFBRSxRQUFRLEVBQUUsSUFBSSxFQUFFLE9BQU8sQ0FBQyxDQUFDLENBQUM7SUFDL0UsQ0FBQztJQUVELEtBQUs7UUFDSCxPQUFPLE9BQU8sQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUMsQ0FBQyxLQUFLLEVBQUUsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLEdBQUcsRUFBRSxHQUFFLENBQUMsQ0FBQyxDQUFDO0lBQzFFLENBQUM7Q0FDRjtBQXZCRCx3Q0F1QkMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgR29vZ2xlIExMQyBBbGwgUmlnaHRzIFJlc2VydmVkLlxuICpcbiAqIFVzZSBvZiB0aGlzIHNvdXJjZSBjb2RlIGlzIGdvdmVybmVkIGJ5IGFuIE1JVC1zdHlsZSBsaWNlbnNlIHRoYXQgY2FuIGJlXG4gKiBmb3VuZCBpbiB0aGUgTElDRU5TRSBmaWxlIGF0IGh0dHBzOi8vYW5ndWxhci5pby9saWNlbnNlXG4gKi9cblxuaW1wb3J0IHsgQW5hbHl0aWNzLCBFdmVudE9wdGlvbnMsIFBhZ2V2aWV3T3B0aW9ucywgU2NyZWVudmlld09wdGlvbnMsIFRpbWluZ09wdGlvbnMgfSBmcm9tICcuL2FwaSc7XG5cbi8qKlxuICogQW5hbHl0aWNzIGltcGxlbWVudGF0aW9uIHRoYXQgcmVwb3J0cyB0byBtdWx0aXBsZSBhbmFseXRpY3MgYmFja2VuZC5cbiAqL1xuZXhwb3J0IGNsYXNzIE11bHRpQW5hbHl0aWNzIGltcGxlbWVudHMgQW5hbHl0aWNzIHtcbiAgY29uc3RydWN0b3IocHJvdGVjdGVkIF9iYWNrZW5kczogQW5hbHl0aWNzW10gPSBbXSkge31cblxuICBwdXNoKC4uLmJhY2tlbmQ6IEFuYWx5dGljc1tdKSB7XG4gICAgdGhpcy5fYmFja2VuZHMucHVzaCguLi5iYWNrZW5kKTtcbiAgfVxuXG4gIGV2ZW50KGNhdGVnb3J5OiBzdHJpbmcsIGFjdGlvbjogc3RyaW5nLCBvcHRpb25zPzogRXZlbnRPcHRpb25zKTogdm9pZCB7XG4gICAgdGhpcy5fYmFja2VuZHMuZm9yRWFjaCgoYmUpID0+IGJlLmV2ZW50KGNhdGVnb3J5LCBhY3Rpb24sIG9wdGlvbnMpKTtcbiAgfVxuICBzY3JlZW52aWV3KHNjcmVlbk5hbWU6IHN0cmluZywgYXBwTmFtZTogc3RyaW5nLCBvcHRpb25zPzogU2NyZWVudmlld09wdGlvbnMpOiB2b2lkIHtcbiAgICB0aGlzLl9iYWNrZW5kcy5mb3JFYWNoKChiZSkgPT4gYmUuc2NyZWVudmlldyhzY3JlZW5OYW1lLCBhcHBOYW1lLCBvcHRpb25zKSk7XG4gIH1cbiAgcGFnZXZpZXcocGF0aDogc3RyaW5nLCBvcHRpb25zPzogUGFnZXZpZXdPcHRpb25zKTogdm9pZCB7XG4gICAgdGhpcy5fYmFja2VuZHMuZm9yRWFjaCgoYmUpID0+IGJlLnBhZ2V2aWV3KHBhdGgsIG9wdGlvbnMpKTtcbiAgfVxuICB0aW1pbmcoY2F0ZWdvcnk6IHN0cmluZywgdmFyaWFibGU6IHN0cmluZywgdGltZTogc3RyaW5nIHwgbnVtYmVyLCBvcHRpb25zPzogVGltaW5nT3B0aW9ucyk6IHZvaWQge1xuICAgIHRoaXMuX2JhY2tlbmRzLmZvckVhY2goKGJlKSA9PiBiZS50aW1pbmcoY2F0ZWdvcnksIHZhcmlhYmxlLCB0aW1lLCBvcHRpb25zKSk7XG4gIH1cblxuICBmbHVzaCgpOiBQcm9taXNlPHZvaWQ+IHtcbiAgICByZXR1cm4gUHJvbWlzZS5hbGwodGhpcy5fYmFja2VuZHMubWFwKCh4KSA9PiB4LmZsdXNoKCkpKS50aGVuKCgpID0+IHt9KTtcbiAgfVxufVxuIl19